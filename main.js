(()=>{"use strict";var e={426:(e,n,r)=>{r.d(n,{Z:()=>l});var t=r(537),o=r.n(t),a=r(645),i=r.n(a),c=r(667),s=r.n(c),d=new URL(r(665),r.b),A=i()(o());A.push([e.id,"@import url(https://fonts.googleapis.com/css2?family=Edu+SA+Beginner:wght@500&family=Roboto&display=swap);"]);var p=s()(d);A.push([e.id,"* {\r\n    margin: 0;\r\n    padding: 0;\r\n}\r\n\r\nbody {\r\n    font-size: 16px;\r\n    font-family: 'Edu SA Beginner', cursive;\r\n    height: 100vh;\r\n    background-image: url("+p+");\r\n}\r\n\r\n#content {\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: 100%;\r\n}\r\n\r\nheader {\r\n    height: 72px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    padding: 0 50px;\r\n    align-items: center;\r\n    font-size: 28px;\r\n    color: white;\r\n    background-color: rgba(35, 52, 58, 0.75);\r\n}\r\n\r\n.headerBody {\r\n    display: flex;\r\n    gap: 120px;\r\n}\r\n\r\n.pizzaLogo {\r\n    filter: invert(96%) sepia(4%) saturate(16%) hue-rotate(143deg) brightness(105%) contrast(104%);\r\n}\r\n\r\n.headerHome:hover, .headerMenu:hover, .headerContact:hover, .pizzaLogo:hover {\r\n    cursor: pointer;\r\n    color: rgb(165, 165, 165);\r\n}\r\n\r\n.homeBody {\r\n    flex: 1;\r\n    color: white;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    gap: 36px;\r\n    padding-bottom: 70px;\r\n}\r\n\r\n.homeBodyMainText {\r\n    font-size: 100px;\r\n}\r\n\r\n.homeBodySubText {\r\n    font-size: 40px;\r\n}\r\n\r\n.menuBody {\r\n    flex: 1;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    color: white;\r\n    font-size: 40px;\r\n    margin: 50px 500px;\r\n    border-radius: 20px;\r\n    background-color: rgba(55, 55, 55, 0.796);\r\n}\r\n\r\n.menuTitle {\r\n    font-size: 56px;\r\n    padding: 16px 0;\r\n}\r\n\r\n.menuItemsWrapper {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding-top: 16px;\r\n    border-top: 2px white solid;\r\n}\r\n\r\n.contactBody {\r\n    flex: 1;\r\n}\r\n\r\n.mainContactBody {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    color: white;\r\n    font-size: 32px;\r\n    padding: 16px 32px 40px 32px;\r\n    gap: 8px;\r\n    margin: 50px 300px 50px 300px;\r\n    border-radius: 20px;\r\n    background-color: rgba(55, 55, 55, 0.796);\r\n}\r\n\r\n.contactTitle {\r\n    font-size: 48px;\r\n}\r\n\r\nfooter {\r\n    height: 30px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    color: white;\r\n    background-color: rgba(15, 16, 16, 0.663);\r\n}\r\n\r\nfooter a:hover {\r\n    cursor: pointer;\r\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAEA;IACI,SAAS;IACT,UAAU;AACd;;AAEA;IACI,eAAe;IACf,uCAAuC;IACvC,aAAa;IACb,yDAAkC;AACtC;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,YAAY;AAChB;;AAEA;IACI,YAAY;IACZ,aAAa;IACb,8BAA8B;IAC9B,eAAe;IACf,mBAAmB;IACnB,eAAe;IACf,YAAY;IACZ,wCAAwC;AAC5C;;AAEA;IACI,aAAa;IACb,UAAU;AACd;;AAEA;IACI,8FAA8F;AAClG;;AAEA;IACI,eAAe;IACf,yBAAyB;AAC7B;;AAEA;IACI,OAAO;IACP,YAAY;IACZ,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,mBAAmB;IACnB,SAAS;IACT,oBAAoB;AACxB;;AAEA;IACI,gBAAgB;AACpB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,OAAO;IACP,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,YAAY;IACZ,eAAe;IACf,kBAAkB;IAClB,mBAAmB;IACnB,yCAAyC;AAC7C;;AAEA;IACI,eAAe;IACf,eAAe;AACnB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,mBAAmB;IACnB,iBAAiB;IACjB,2BAA2B;AAC/B;;AAEA;IACI,OAAO;AACX;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,YAAY;IACZ,eAAe;IACf,4BAA4B;IAC5B,QAAQ;IACR,6BAA6B;IAC7B,mBAAmB;IACnB,yCAAyC;AAC7C;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,YAAY;IACZ,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,YAAY;IACZ,yCAAyC;AAC7C;;AAEA;IACI,eAAe;AACnB",sourcesContent:["@import url('https://fonts.googleapis.com/css2?family=Edu+SA+Beginner:wght@500&family=Roboto&display=swap');\r\n\r\n* {\r\n    margin: 0;\r\n    padding: 0;\r\n}\r\n\r\nbody {\r\n    font-size: 16px;\r\n    font-family: 'Edu SA Beginner', cursive;\r\n    height: 100vh;\r\n    background-image: url(./Pizza.png);\r\n}\r\n\r\n#content {\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: 100%;\r\n}\r\n\r\nheader {\r\n    height: 72px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    padding: 0 50px;\r\n    align-items: center;\r\n    font-size: 28px;\r\n    color: white;\r\n    background-color: rgba(35, 52, 58, 0.75);\r\n}\r\n\r\n.headerBody {\r\n    display: flex;\r\n    gap: 120px;\r\n}\r\n\r\n.pizzaLogo {\r\n    filter: invert(96%) sepia(4%) saturate(16%) hue-rotate(143deg) brightness(105%) contrast(104%);\r\n}\r\n\r\n.headerHome:hover, .headerMenu:hover, .headerContact:hover, .pizzaLogo:hover {\r\n    cursor: pointer;\r\n    color: rgb(165, 165, 165);\r\n}\r\n\r\n.homeBody {\r\n    flex: 1;\r\n    color: white;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    gap: 36px;\r\n    padding-bottom: 70px;\r\n}\r\n\r\n.homeBodyMainText {\r\n    font-size: 100px;\r\n}\r\n\r\n.homeBodySubText {\r\n    font-size: 40px;\r\n}\r\n\r\n.menuBody {\r\n    flex: 1;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    color: white;\r\n    font-size: 40px;\r\n    margin: 50px 500px;\r\n    border-radius: 20px;\r\n    background-color: rgba(55, 55, 55, 0.796);\r\n}\r\n\r\n.menuTitle {\r\n    font-size: 56px;\r\n    padding: 16px 0;\r\n}\r\n\r\n.menuItemsWrapper {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding-top: 16px;\r\n    border-top: 2px white solid;\r\n}\r\n\r\n.contactBody {\r\n    flex: 1;\r\n}\r\n\r\n.mainContactBody {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    color: white;\r\n    font-size: 32px;\r\n    padding: 16px 32px 40px 32px;\r\n    gap: 8px;\r\n    margin: 50px 300px 50px 300px;\r\n    border-radius: 20px;\r\n    background-color: rgba(55, 55, 55, 0.796);\r\n}\r\n\r\n.contactTitle {\r\n    font-size: 48px;\r\n}\r\n\r\nfooter {\r\n    height: 30px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    color: white;\r\n    background-color: rgba(15, 16, 16, 0.663);\r\n}\r\n\r\nfooter a:hover {\r\n    cursor: pointer;\r\n}"],sourceRoot:""}]);const l=A},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var r="",t=void 0!==n[5];return n[4]&&(r+="@supports (".concat(n[4],") {")),n[2]&&(r+="@media ".concat(n[2]," {")),t&&(r+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),r+=e(n),t&&(r+="}"),n[2]&&(r+="}"),n[4]&&(r+="}"),r})).join("")},n.i=function(e,r,t,o,a){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(t)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(i[s]=!0)}for(var d=0;d<e.length;d++){var A=[].concat(e[d]);t&&i[A[0]]||(void 0!==a&&(void 0===A[5]||(A[1]="@layer".concat(A[5].length>0?" ".concat(A[5]):""," {").concat(A[1],"}")),A[5]=a),r&&(A[2]?(A[1]="@media ".concat(A[2]," {").concat(A[1],"}"),A[2]=r):A[2]=r),o&&(A[4]?(A[1]="@supports (".concat(A[4],") {").concat(A[1],"}"),A[4]=o):A[4]="".concat(o)),n.push(A))}},n}},667:e=>{e.exports=function(e,n){return n||(n={}),e?(e=String(e.__esModule?e.default:e),/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),n.hash&&(e+=n.hash),/["'() \t\n]|(%20)/.test(e)||n.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e):e}},537:e=>{e.exports=function(e){var n=e[1],r=e[3];if(!r)return n;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(r)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),a="/*# ".concat(o," */"),i=r.sources.map((function(e){return"/*# sourceURL=".concat(r.sourceRoot||"").concat(e," */")}));return[n].concat(i).concat([a]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function r(e){for(var r=-1,t=0;t<n.length;t++)if(n[t].identifier===e){r=t;break}return r}function t(e,t){for(var a={},i=[],c=0;c<e.length;c++){var s=e[c],d=t.base?s[0]+t.base:s[0],A=a[d]||0,p="".concat(d," ").concat(A);a[d]=A+1;var l=r(p),u={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==l)n[l].references++,n[l].updater(u);else{var m=o(u,t);t.byIndex=c,n.splice(c,0,{identifier:p,updater:m,references:1})}i.push(p)}return i}function o(e,n){var r=n.domAPI(n);return r.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;r.update(e=n)}else r.remove()}}e.exports=function(e,o){var a=t(e=e||[],o=o||{});return function(e){e=e||[];for(var i=0;i<a.length;i++){var c=r(a[i]);n[c].references--}for(var s=t(e,o),d=0;d<a.length;d++){var A=r(a[d]);0===n[A].references&&(n[A].updater(),n.splice(A,1))}a=s}}},569:e=>{var n={};e.exports=function(e,r){var t=function(e){if(void 0===n[e]){var r=document.querySelector(e);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(e){r=null}n[e]=r}return n[e]}(e);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(r)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,r)=>{e.exports=function(e){var n=r.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){var n=e.insertStyleElement(e);return{update:function(r){!function(e,n,r){var t="";r.supports&&(t+="@supports (".concat(r.supports,") {")),r.media&&(t+="@media ".concat(r.media," {"));var o=void 0!==r.layer;o&&(t+="@layer".concat(r.layer.length>0?" ".concat(r.layer):""," {")),t+=r.css,o&&(t+="}"),r.media&&(t+="}"),r.supports&&(t+="}");var a=r.sourceMap;a&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),n.styleTagTransform(t,e,n.options)}(n,e,r)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}},665:(e,n,r)=>{e.exports=r.p+"Pizza.png"}},n={};function r(t){var o=n[t];if(void 0!==o)return o.exports;var a=n[t]={id:t,exports:{}};return e[t](a,a.exports,r),a.exports}r.m=e,r.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return r.d(n,{a:n}),n},r.d=(e,n)=>{for(var t in n)r.o(n,t)&&!r.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:n[t]})},r.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),r.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var e;r.g.importScripts&&(e=r.g.location+"");var n=r.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var t=n.getElementsByTagName("script");t.length&&(e=t[t.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),r.p=e})(),r.b=document.baseURI||self.location.href,r.nc=void 0,(()=>{var e=r(379),n=r.n(e),t=r(795),o=r.n(t),a=r(569),i=r.n(a),c=r(565),s=r.n(c),d=r(216),A=r.n(d),p=r(589),l=r.n(p),u=r(426),m={};m.styleTagTransform=l(),m.setAttributes=s(),m.insert=i().bind(null,"head"),m.domAPI=o(),m.insertStyleElement=A(),n()(u.Z,m),u.Z&&u.Z.locals&&u.Z.locals;const f=()=>{let e=document.createElement("div"),n=document.createElement("div"),r=document.createElement("div");e.classList.add("homeBody"),n.classList.add("homeBodyMainText"),r.classList.add("homeBodySubText"),n.textContent="Brooklyn's Finest Brick Oven Pizza",r.textContent="Established in 2006",e.append(n),e.append(r),document.querySelector("#content").append(e)},C=()=>{let e=document.createElement("footer"),n=document.createElement("a");n.textContent="© Adrian Sujkovic",n.addEventListener("click",(()=>window.open("https://github.com/sujkovic")),!1),e.append(n),document.querySelector("#content").append(e)},h=r.p+"pizzaLogo.png";let x="home";function g(){"home"===x&&document.querySelector(".homeBody").remove(),"menu"===x&&document.querySelector(".menuBody").remove(),"contact"===x&&document.querySelector(".contactBody").remove(),document.querySelector("footer").remove()}!function(){let e=document.createElement("header"),n=document.createElement("div"),r=document.createElement("div"),t=document.createElement("span"),o=document.createElement("span"),a=document.createElement("span"),i=document.createElement("div"),c=new Image;c.src=h,r.classList.add("headerBody"),n.textContent="logo",t.textContent="Home",o.textContent="Menu",a.textContent="Contact",t.classList.add("headerHome"),o.classList.add("headerMenu"),a.classList.add("headerContact"),c.classList.add("pizzaLogo"),t.addEventListener("click",(()=>{"home"!==x&&(g(),f(),C(),x="home")}),!1),c.addEventListener("click",(()=>{"home"!==x&&(g(),f(),C(),x="home")}),!1),o.addEventListener("click",(()=>{"menu"!==x&&(g(),(()=>{let e=document.createElement("div"),n=document.createElement("div"),r=document.createElement("div"),t=document.createElement("div"),o=document.createElement("div"),a=document.createElement("div"),i=document.createElement("div");n.textContent="Our menu",t.textContent="Chicken Alfredo • 12",o.textContent="Margarita Pizza • 15",a.textContent="Four Cheese Pizza • 16",i.textContent="Mussels in white wine sauce • 15",e.classList.add("menuBody"),n.classList.add("menuTitle"),r.classList.add("menuItemsWrapper"),r.append(t),r.append(o),r.append(a),r.append(i),e.append(n),e.append(r),document.querySelector("#content").append(e)})(),C(),x="menu")}),!1),a.addEventListener("click",(()=>{"contact"!==x&&(g(),(()=>{let e=document.createElement("div"),n=document.createElement("div"),r=document.createElement("div"),t=document.createElement("div"),o=document.createElement("div"),a=document.createElement("div");r.textContent="Contact Us!",t.textContent="Email: delicious@pizza.com",o.textContent="Phone: 123-467-7890",a.textContent="We are located at 123 Pizza Street, Brooklyn NY",e.classList.add("contactBody"),n.classList.add("mainContactBody"),r.classList.add("contactTitle"),n.append(r),n.append(t),n.append(o),n.append(a),e.append(n),document.querySelector("#content").append(e)})(),C(),x="contact")}),!1),r.append(t),r.append(o),r.append(a),e.append(c),e.append(r),e.append(i),content.append(e)}(),f(),C(),console.log(x),console.log("hi")})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,